// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using netscii.Models;

#nullable disable

namespace netscii.Migrations
{
    [DbContext(typeof(NetsciiContext))]
    [Migration("20250707175644_AddedLogging")]
    partial class AddedLogging
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("netscii.Models.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutputLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessingTimeMs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConversionActivities");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionAssociation", b =>
                {
                    b.Property<int>("ConversionActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConversionParametersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConversionActivityId", "ConversionParametersId");

                    b.HasIndex("ConversionParametersId");

                    b.ToTable("ConversionAssociations");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Characters")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Font")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Invert")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Scale")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConversionParameters");
                });

            modelBuilder.Entity("netscii.Models.Entities.Font", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fonts");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionAssociation", b =>
                {
                    b.HasOne("netscii.Models.Entities.ConversionActivity", "ConversionActivity")
                        .WithMany("ConversionAssociation")
                        .HasForeignKey("ConversionActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("netscii.Models.Entities.ConversionParameters", "ConversionParameters")
                        .WithMany("ConversionAssociation")
                        .HasForeignKey("ConversionParametersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConversionActivity");

                    b.Navigation("ConversionParameters");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionActivity", b =>
                {
                    b.Navigation("ConversionAssociation");
                });

            modelBuilder.Entity("netscii.Models.Entities.ConversionParameters", b =>
                {
                    b.Navigation("ConversionAssociation");
                });
#pragma warning restore 612, 618
        }
    }
}
